
<<url>>=
https://github.com/ctarbide
@

<<body>>=

<h1><<TITLE>></h1> 

<p> Hi, you are very much welcome!

<h2>Pages</h2>

<<pages listing>>

<h2>About</h2>

<p> The intent of this is to document some of the stuff I do at <a href="<<url>>"><<url>></a>.

<p> <a href="pages/2024/2024-01-06_15h38m06_meta/index.html">More information</a>.

@

<<PRIMARY SOURCES>>=
<<TOP>>/assets.nw index.nw
@

<<URL_PREFIX>>=
https://ctarbide.github.io/
@

<<TOP>>=
.
@

<<CANONICAL_URL>>=
<<URL_PREFIX>>index.html
@

<<TITLE>>=
ctarbi.de - Main Page
@

<<sh preamble>>=
#!/bin/sh
set -eu
@

<<print LAST MODIFIED>>=
if git diff-index --quiet HEAD index.nw; then
    FORMAT='format:%B %e, %Y at %T UTC' git-last-modified.sh index.nw | perl \
        -lne'print(qq{@<<LAST MODIFIED@>>=\n${_}\n@\n})'
else
    last-modified.sh index.nw | perl -MPOSIX=strftime \
        -lne'print(strftime(qq{@<<LAST MODIFIED@>>=\n%B %e, %Y (DRAFT)\n@\n}, gmtime($_)))'
fi
@

<<generate>>=
<<sh preamble>>
<<print LAST MODIFIED>>
cat <<PRIMARY SOURCES>> pages.nw
@

<<render>>=
<<sh preamble>>
nofake -Rgenerate index.nw | sh | CHMOD='chmod 0444' nofake.sh --error -Rindex.html -oindex.html
@

<<index.html>>=
<!DOCTYPE html>
<html lang="en">
<title><<TITLE>></title>
<<metas and links>>
<<style>>
<<body>>
<<footer>>
@

<<metas and links>>=
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=0.6">
<link rel="canonical" href="<<CANONICAL_URL>>">
<link rel="icon" href="<<assets - favicon.ico for top level>>" type="image/x-icon">
@

<<footer>>=
<p> This <a href="index.nw">page</a> was last modified on <<LAST MODIFIED>>.<br>
@

<<*>>=
<<sh preamble>>
nofake -R'generate pages.nw' index.nw | sh
nofake --error -Rrender <<PRIMARY SOURCES>> pages.nw | sh
@

<<find pages Makefile>>=
find pages/ -mindepth 3 -maxdepth 3 -name Makefile -type f
@

<<generate pages listing>>=
<<find pages Makefile>> | LC_ALL=C sort -r | perl -le'
    printf(qq{@<<pages listing>>=\n});
    printf(qq{<ul>\n});
    while (<STDIN>) {
        chomp;
        s,^\./|/Makefile$,,g;
        next if -f qq{${_}/.hidden};
        next unless m{^( pages/ [12]\d{3} / ) (.*)$}xi;
        my ($date, $item) = ($1, $2);
        print(qq{<li><a href="${_}/">${item}</a></li>});
    }
    printf(qq{</ul>\n});
    printf(qq{@\n});'
@

<<generate pages.nw>>=
<<sh preamble>>
rm -f pages.nw
(
    <<generate pages listing>>
)>pages.nw
chmod 0444 pages.nw
@

<<generate Makefile>>=
<<sh preamble>>
( <<find pages Makefile>> | LC_ALL=C sort | perl -le'
    printf(qq{@<<make pages>>=\n});
    while (<STDIN>) {
        chomp;
        s,^\./|/Makefile$,,g;
        print(qq{\t\$(MAKE) -C \047${_}\047});
    }
    printf(qq{@\n});'
) | CHMOD='chmod 0444' nofake.sh --error -RMakefile -oMakefile index.nw -
@

<<Makefile>>=
index.html: update-Makefile pages index.nw
	nofake --error index.nw | sh

.PHONY: update-Makefile
update-Makefile:
	nofake -R'generate Makefile' index.nw | sh

.PHONY: pages
pages:
<<make pages>>
@

nofake -R'git reset draft pages' index.nw | sh | sh

<<git reset draft pages>>=
<<sh preamble>>
<<find pages Makefile>> | LC_ALL=C sort | perl -le'
    while (<STDIN>) {
        chomp;
        s,^\./|/Makefile$,,g;
        next unless -f qq{${_}/.draft};
        print(qq{git reset --quiet \047${_}/index.html\047});
    }'
@
